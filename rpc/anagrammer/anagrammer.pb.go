// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/anagrammer/anagrammer.proto

package anagrammer

import (
	fmt "fmt"
	wordsearcher "github.com/domino14/word_db_server/rpc/wordsearcher"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AnagramRequest_Mode int32

const (
	AnagramRequest_EXACT AnagramRequest_Mode = 0
	AnagramRequest_BUILD AnagramRequest_Mode = 1
)

var AnagramRequest_Mode_name = map[int32]string{
	0: "EXACT",
	1: "BUILD",
}

var AnagramRequest_Mode_value = map[string]int32{
	"EXACT": 0,
	"BUILD": 1,
}

func (x AnagramRequest_Mode) String() string {
	return proto.EnumName(AnagramRequest_Mode_name, int32(x))
}

func (AnagramRequest_Mode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8f175fe36f73921d, []int{0, 0}
}

type AnagramRequest struct {
	Lexicon              string              `protobuf:"bytes,1,opt,name=lexicon,proto3" json:"lexicon,omitempty"`
	Letters              string              `protobuf:"bytes,2,opt,name=letters,proto3" json:"letters,omitempty"`
	Mode                 AnagramRequest_Mode `protobuf:"varint,3,opt,name=mode,proto3,enum=anagrammer.AnagramRequest_Mode" json:"mode,omitempty"`
	Expand               bool                `protobuf:"varint,4,opt,name=expand,proto3" json:"expand,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AnagramRequest) Reset()         { *m = AnagramRequest{} }
func (m *AnagramRequest) String() string { return proto.CompactTextString(m) }
func (*AnagramRequest) ProtoMessage()    {}
func (*AnagramRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f175fe36f73921d, []int{0}
}

func (m *AnagramRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnagramRequest.Unmarshal(m, b)
}
func (m *AnagramRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnagramRequest.Marshal(b, m, deterministic)
}
func (m *AnagramRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnagramRequest.Merge(m, src)
}
func (m *AnagramRequest) XXX_Size() int {
	return xxx_messageInfo_AnagramRequest.Size(m)
}
func (m *AnagramRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AnagramRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AnagramRequest proto.InternalMessageInfo

func (m *AnagramRequest) GetLexicon() string {
	if m != nil {
		return m.Lexicon
	}
	return ""
}

func (m *AnagramRequest) GetLetters() string {
	if m != nil {
		return m.Letters
	}
	return ""
}

func (m *AnagramRequest) GetMode() AnagramRequest_Mode {
	if m != nil {
		return m.Mode
	}
	return AnagramRequest_EXACT
}

func (m *AnagramRequest) GetExpand() bool {
	if m != nil {
		return m.Expand
	}
	return false
}

type AnagramResponse struct {
	Words                []*wordsearcher.Word `protobuf:"bytes,1,rep,name=words,proto3" json:"words,omitempty"`
	NumWords             int32                `protobuf:"varint,2,opt,name=num_words,json=numWords,proto3" json:"num_words,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AnagramResponse) Reset()         { *m = AnagramResponse{} }
func (m *AnagramResponse) String() string { return proto.CompactTextString(m) }
func (*AnagramResponse) ProtoMessage()    {}
func (*AnagramResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f175fe36f73921d, []int{1}
}

func (m *AnagramResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnagramResponse.Unmarshal(m, b)
}
func (m *AnagramResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnagramResponse.Marshal(b, m, deterministic)
}
func (m *AnagramResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnagramResponse.Merge(m, src)
}
func (m *AnagramResponse) XXX_Size() int {
	return xxx_messageInfo_AnagramResponse.Size(m)
}
func (m *AnagramResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AnagramResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AnagramResponse proto.InternalMessageInfo

func (m *AnagramResponse) GetWords() []*wordsearcher.Word {
	if m != nil {
		return m.Words
	}
	return nil
}

func (m *AnagramResponse) GetNumWords() int32 {
	if m != nil {
		return m.NumWords
	}
	return 0
}

type BlankChallengeCreateRequest struct {
	Lexicon              string   `protobuf:"bytes,1,opt,name=lexicon,proto3" json:"lexicon,omitempty"`
	NumQuestions         int32    `protobuf:"varint,2,opt,name=num_questions,json=numQuestions,proto3" json:"num_questions,omitempty"`
	MaxSolutions         int32    `protobuf:"varint,3,opt,name=max_solutions,json=maxSolutions,proto3" json:"max_solutions,omitempty"`
	NumWith_2Blanks      int32    `protobuf:"varint,4,opt,name=num_with_2_blanks,json=numWith2Blanks,proto3" json:"num_with_2_blanks,omitempty"`
	WordLength           int32    `protobuf:"varint,5,opt,name=word_length,json=wordLength,proto3" json:"word_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlankChallengeCreateRequest) Reset()         { *m = BlankChallengeCreateRequest{} }
func (m *BlankChallengeCreateRequest) String() string { return proto.CompactTextString(m) }
func (*BlankChallengeCreateRequest) ProtoMessage()    {}
func (*BlankChallengeCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f175fe36f73921d, []int{2}
}

func (m *BlankChallengeCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlankChallengeCreateRequest.Unmarshal(m, b)
}
func (m *BlankChallengeCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlankChallengeCreateRequest.Marshal(b, m, deterministic)
}
func (m *BlankChallengeCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlankChallengeCreateRequest.Merge(m, src)
}
func (m *BlankChallengeCreateRequest) XXX_Size() int {
	return xxx_messageInfo_BlankChallengeCreateRequest.Size(m)
}
func (m *BlankChallengeCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlankChallengeCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlankChallengeCreateRequest proto.InternalMessageInfo

func (m *BlankChallengeCreateRequest) GetLexicon() string {
	if m != nil {
		return m.Lexicon
	}
	return ""
}

func (m *BlankChallengeCreateRequest) GetNumQuestions() int32 {
	if m != nil {
		return m.NumQuestions
	}
	return 0
}

func (m *BlankChallengeCreateRequest) GetMaxSolutions() int32 {
	if m != nil {
		return m.MaxSolutions
	}
	return 0
}

func (m *BlankChallengeCreateRequest) GetNumWith_2Blanks() int32 {
	if m != nil {
		return m.NumWith_2Blanks
	}
	return 0
}

func (m *BlankChallengeCreateRequest) GetWordLength() int32 {
	if m != nil {
		return m.WordLength
	}
	return 0
}

type BuildChallengeCreateRequest struct {
	Lexicon               string   `protobuf:"bytes,1,opt,name=lexicon,proto3" json:"lexicon,omitempty"`
	MinSolutions          int32    `protobuf:"varint,2,opt,name=min_solutions,json=minSolutions,proto3" json:"min_solutions,omitempty"`
	MaxSolutions          int32    `protobuf:"varint,3,opt,name=max_solutions,json=maxSolutions,proto3" json:"max_solutions,omitempty"`
	MinLength             int32    `protobuf:"varint,4,opt,name=min_length,json=minLength,proto3" json:"min_length,omitempty"`
	MaxLength             int32    `protobuf:"varint,5,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	RequireLengthSolution bool     `protobuf:"varint,6,opt,name=require_length_solution,json=requireLengthSolution,proto3" json:"require_length_solution,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *BuildChallengeCreateRequest) Reset()         { *m = BuildChallengeCreateRequest{} }
func (m *BuildChallengeCreateRequest) String() string { return proto.CompactTextString(m) }
func (*BuildChallengeCreateRequest) ProtoMessage()    {}
func (*BuildChallengeCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f175fe36f73921d, []int{3}
}

func (m *BuildChallengeCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildChallengeCreateRequest.Unmarshal(m, b)
}
func (m *BuildChallengeCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildChallengeCreateRequest.Marshal(b, m, deterministic)
}
func (m *BuildChallengeCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildChallengeCreateRequest.Merge(m, src)
}
func (m *BuildChallengeCreateRequest) XXX_Size() int {
	return xxx_messageInfo_BuildChallengeCreateRequest.Size(m)
}
func (m *BuildChallengeCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildChallengeCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BuildChallengeCreateRequest proto.InternalMessageInfo

func (m *BuildChallengeCreateRequest) GetLexicon() string {
	if m != nil {
		return m.Lexicon
	}
	return ""
}

func (m *BuildChallengeCreateRequest) GetMinSolutions() int32 {
	if m != nil {
		return m.MinSolutions
	}
	return 0
}

func (m *BuildChallengeCreateRequest) GetMaxSolutions() int32 {
	if m != nil {
		return m.MaxSolutions
	}
	return 0
}

func (m *BuildChallengeCreateRequest) GetMinLength() int32 {
	if m != nil {
		return m.MinLength
	}
	return 0
}

func (m *BuildChallengeCreateRequest) GetMaxLength() int32 {
	if m != nil {
		return m.MaxLength
	}
	return 0
}

func (m *BuildChallengeCreateRequest) GetRequireLengthSolution() bool {
	if m != nil {
		return m.RequireLengthSolution
	}
	return false
}

func init() {
	proto.RegisterEnum("anagrammer.AnagramRequest_Mode", AnagramRequest_Mode_name, AnagramRequest_Mode_value)
	proto.RegisterType((*AnagramRequest)(nil), "anagrammer.AnagramRequest")
	proto.RegisterType((*AnagramResponse)(nil), "anagrammer.AnagramResponse")
	proto.RegisterType((*BlankChallengeCreateRequest)(nil), "anagrammer.BlankChallengeCreateRequest")
	proto.RegisterType((*BuildChallengeCreateRequest)(nil), "anagrammer.BuildChallengeCreateRequest")
}

func init() { proto.RegisterFile("rpc/anagrammer/anagrammer.proto", fileDescriptor_8f175fe36f73921d) }

var fileDescriptor_8f175fe36f73921d = []byte{
	// 518 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0xc9, 0xfa, 0x67, 0xeb, 0x19, 0x94, 0x61, 0x69, 0x10, 0xb5, 0x43, 0xad, 0xca, 0x05,
	0xe1, 0x26, 0xd5, 0x52, 0xc4, 0x7d, 0x5b, 0xb8, 0x40, 0x1a, 0x17, 0x64, 0x20, 0x26, 0x2e, 0x88,
	0xdc, 0xc6, 0x6a, 0x2c, 0x62, 0xbb, 0xb3, 0x13, 0xc8, 0x63, 0xf0, 0x26, 0x3c, 0x09, 0xcf, 0xc3,
	0x2d, 0xb2, 0x9d, 0x74, 0x89, 0xf6, 0x07, 0xc4, 0x9d, 0xcf, 0x39, 0xbf, 0x7c, 0xf9, 0xbe, 0xe4,
	0xc8, 0x30, 0x92, 0xdb, 0xf5, 0x14, 0x73, 0xbc, 0x91, 0x98, 0x31, 0x22, 0x6b, 0x47, 0x7f, 0x2b,
	0x45, 0x26, 0x10, 0x5c, 0x75, 0x06, 0x06, 0xfe, 0x2e, 0x64, 0xac, 0x08, 0x96, 0xeb, 0x84, 0xc8,
	0x69, 0x75, 0xb0, 0xf0, 0xe4, 0xa7, 0x03, 0xfd, 0xb9, 0xe5, 0x43, 0x72, 0x99, 0x13, 0x95, 0x21,
	0x17, 0xf6, 0x53, 0x52, 0xd0, 0xb5, 0xe0, 0xae, 0x33, 0x76, 0xbc, 0x5e, 0x58, 0x95, 0x76, 0x92,
	0x65, 0x44, 0x2a, 0x77, 0xaf, 0x9a, 0x98, 0x12, 0xcd, 0xa0, 0xcd, 0x44, 0x4c, 0xdc, 0xd6, 0xd8,
	0xf1, 0xfa, 0xc1, 0xc8, 0xaf, 0x99, 0x6a, 0xaa, 0xfb, 0xef, 0x44, 0x4c, 0x42, 0x03, 0xa3, 0xc7,
	0xd0, 0x25, 0xc5, 0x16, 0xf3, 0xd8, 0x6d, 0x8f, 0x1d, 0xef, 0x20, 0x2c, 0xab, 0xc9, 0x09, 0xb4,
	0x35, 0x85, 0x7a, 0xd0, 0x79, 0x73, 0x31, 0x5f, 0x7e, 0x38, 0xba, 0xa7, 0x8f, 0x8b, 0x8f, 0x6f,
	0xcf, 0x5e, 0x1f, 0x39, 0x93, 0x0b, 0x78, 0xb8, 0x93, 0x54, 0x5b, 0xc1, 0x15, 0x41, 0x1e, 0x74,
	0x4c, 0x46, 0xd7, 0x19, 0xb7, 0xbc, 0xc3, 0x00, 0xf9, 0xf5, 0xc4, 0xfe, 0x27, 0x21, 0xe3, 0xd0,
	0x02, 0x68, 0x08, 0x3d, 0x9e, 0xb3, 0xc8, 0xd2, 0x3a, 0x43, 0x27, 0x3c, 0xe0, 0x39, 0xd3, 0x88,
	0x9a, 0xfc, 0x72, 0x60, 0xb8, 0x48, 0x31, 0xff, 0xba, 0x4c, 0x70, 0x9a, 0x12, 0xbe, 0x21, 0x4b,
	0x49, 0x70, 0x46, 0xfe, 0xfe, 0x61, 0x9e, 0xc1, 0x03, 0x2d, 0x6b, 0x30, 0x2a, 0x78, 0x25, 0x7d,
	0x9f, 0xe7, 0xec, 0x7d, 0xd5, 0xd3, 0x10, 0xc3, 0x45, 0xa4, 0x44, 0x9a, 0x5b, 0xa8, 0x65, 0x21,
	0x86, 0x8b, 0xf3, 0xaa, 0x87, 0x5e, 0xc0, 0x23, 0x63, 0x90, 0x66, 0x49, 0x14, 0x44, 0x2b, 0xed,
	0x46, 0x99, 0xcf, 0xd3, 0x09, 0xfb, 0xda, 0x28, 0xcd, 0x92, 0xc0, 0x78, 0x54, 0x68, 0x04, 0x87,
	0x3a, 0x47, 0xa4, 0x9d, 0x66, 0x89, 0xdb, 0x31, 0x10, 0xe8, 0xd6, 0x99, 0xe9, 0x4c, 0x7e, 0xeb,
	0x3c, 0x39, 0x4d, 0xe3, 0xff, 0xc9, 0xc3, 0x28, 0xaf, 0x59, 0x2d, 0xf3, 0x30, 0xca, 0xaf, 0xac,
	0xfe, 0x53, 0x9e, 0xa7, 0x00, 0x5a, 0xa9, 0xf4, 0x68, 0x83, 0xf4, 0x18, 0xe5, 0xd6, 0xa2, 0x19,
	0xe3, 0xa2, 0x19, 0xa1, 0xc7, 0x70, 0x51, 0x8e, 0x5f, 0xc1, 0x13, 0x49, 0x2e, 0x73, 0x2a, 0x49,
	0x89, 0xec, 0xde, 0xe6, 0x76, 0xcd, 0xca, 0x1c, 0x97, 0x63, 0xcb, 0x57, 0xaf, 0x0d, 0x7e, 0xec,
	0x01, 0xcc, 0x77, 0x2b, 0x88, 0x16, 0xb0, 0x5f, 0x56, 0x68, 0x70, 0xfb, 0x6a, 0x0e, 0x86, 0x37,
	0xce, 0xca, 0x1d, 0xfb, 0x02, 0xc7, 0x37, 0xec, 0x86, 0x90, 0xe8, 0x79, 0xfd, 0xa9, 0x3b, 0xd6,
	0x67, 0x70, 0xd2, 0x5c, 0xcb, 0x73, 0x73, 0x68, 0xe8, 0x5f, 0xff, 0x57, 0xd7, 0xf4, 0x6f, 0xff,
	0x9d, 0x77, 0xeb, 0x2f, 0x66, 0x9f, 0x4f, 0x37, 0x34, 0x4b, 0xf2, 0x95, 0xbf, 0x16, 0x6c, 0x1a,
	0x0b, 0x46, 0xb9, 0x38, 0x7d, 0x69, 0xee, 0x86, 0x28, 0x5e, 0x45, 0x8a, 0xc8, 0x6f, 0x44, 0x4e,
	0x9b, 0x77, 0xcb, 0xaa, 0x6b, 0x2e, 0x89, 0xd9, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x18, 0x39,
	0xbb, 0xb8, 0x74, 0x04, 0x00, 0x00,
}
