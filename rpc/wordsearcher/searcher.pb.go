// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/wordsearcher/searcher.proto

package wordsearcher

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SearchRequest_Condition int32

const (
	SearchRequest_LEXICON            SearchRequest_Condition = 0
	SearchRequest_LENGTH             SearchRequest_Condition = 1
	SearchRequest_PROBABILITY_RANGE  SearchRequest_Condition = 2
	SearchRequest_PROBABILITY_LIST   SearchRequest_Condition = 3
	SearchRequest_PROBABILITY_LIMIT  SearchRequest_Condition = 4
	SearchRequest_NUMBER_OF_ANAGRAMS SearchRequest_Condition = 5
	SearchRequest_NUMBER_OF_VOWELS   SearchRequest_Condition = 6
	// HAS_TAGS = 7;
	SearchRequest_POINT_VALUE      SearchRequest_Condition = 8
	SearchRequest_MATCHING_ANAGRAM SearchRequest_Condition = 9
	SearchRequest_ALPHAGRAM_LIST   SearchRequest_Condition = 10
	SearchRequest_NOT_IN_LEXICON   SearchRequest_Condition = 11
	SearchRequest_REGEX            SearchRequest_Condition = 12
)

var SearchRequest_Condition_name = map[int32]string{
	0:  "LEXICON",
	1:  "LENGTH",
	2:  "PROBABILITY_RANGE",
	3:  "PROBABILITY_LIST",
	4:  "PROBABILITY_LIMIT",
	5:  "NUMBER_OF_ANAGRAMS",
	6:  "NUMBER_OF_VOWELS",
	8:  "POINT_VALUE",
	9:  "MATCHING_ANAGRAM",
	10: "ALPHAGRAM_LIST",
	11: "NOT_IN_LEXICON",
	12: "REGEX",
}

var SearchRequest_Condition_value = map[string]int32{
	"LEXICON":            0,
	"LENGTH":             1,
	"PROBABILITY_RANGE":  2,
	"PROBABILITY_LIST":   3,
	"PROBABILITY_LIMIT":  4,
	"NUMBER_OF_ANAGRAMS": 5,
	"NUMBER_OF_VOWELS":   6,
	"POINT_VALUE":        8,
	"MATCHING_ANAGRAM":   9,
	"ALPHAGRAM_LIST":     10,
	"NOT_IN_LEXICON":     11,
	"REGEX":              12,
}

func (x SearchRequest_Condition) String() string {
	return proto.EnumName(SearchRequest_Condition_name, int32(x))
}

func (SearchRequest_Condition) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_14226a2334c91a98, []int{2, 0}
}

// An Alphagram encapsulates info about an alphagram, including the words,
// length, probability, combinations.
type Alphagram struct {
	Alphagram string  `protobuf:"bytes,1,opt,name=alphagram,proto3" json:"alphagram,omitempty"`
	Words     []*Word `protobuf:"bytes,2,rep,name=words,proto3" json:"words,omitempty"`
	// expandedRepr is true if the length, probability, combinations are
	// included. Otherwise, this is an "unexpanded" alphagram.
	// Note that if expandedRepr is true, then the `words` field is also
	// expanded (with definition, hooks, etc).
	ExpandedRepr         bool     `protobuf:"varint,3,opt,name=expandedRepr,proto3" json:"expandedRepr,omitempty"`
	Length               int32    `protobuf:"varint,4,opt,name=length,proto3" json:"length,omitempty"`
	Probability          int32    `protobuf:"varint,5,opt,name=probability,proto3" json:"probability,omitempty"`
	Combinations         int64    `protobuf:"varint,6,opt,name=combinations,proto3" json:"combinations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Alphagram) Reset()         { *m = Alphagram{} }
func (m *Alphagram) String() string { return proto.CompactTextString(m) }
func (*Alphagram) ProtoMessage()    {}
func (*Alphagram) Descriptor() ([]byte, []int) {
	return fileDescriptor_14226a2334c91a98, []int{0}
}

func (m *Alphagram) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Alphagram.Unmarshal(m, b)
}
func (m *Alphagram) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Alphagram.Marshal(b, m, deterministic)
}
func (m *Alphagram) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Alphagram.Merge(m, src)
}
func (m *Alphagram) XXX_Size() int {
	return xxx_messageInfo_Alphagram.Size(m)
}
func (m *Alphagram) XXX_DiscardUnknown() {
	xxx_messageInfo_Alphagram.DiscardUnknown(m)
}

var xxx_messageInfo_Alphagram proto.InternalMessageInfo

func (m *Alphagram) GetAlphagram() string {
	if m != nil {
		return m.Alphagram
	}
	return ""
}

func (m *Alphagram) GetWords() []*Word {
	if m != nil {
		return m.Words
	}
	return nil
}

func (m *Alphagram) GetExpandedRepr() bool {
	if m != nil {
		return m.ExpandedRepr
	}
	return false
}

func (m *Alphagram) GetLength() int32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *Alphagram) GetProbability() int32 {
	if m != nil {
		return m.Probability
	}
	return 0
}

func (m *Alphagram) GetCombinations() int64 {
	if m != nil {
		return m.Combinations
	}
	return 0
}

// A Word is more than just the string representing the word. It has other
// info like the definition, hooks, lex symbols, etc.
type Word struct {
	Word      string `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	Alphagram string `protobuf:"bytes,2,opt,name=alphagram,proto3" json:"alphagram,omitempty"`
	// Note: the following fields are not filled in if the alphagram's
	// `expandedRepr` is false. Protobuf fields are optional already, but
	// this lets us be explicit.
	Definition           string   `protobuf:"bytes,3,opt,name=definition,proto3" json:"definition,omitempty"`
	FrontHooks           string   `protobuf:"bytes,4,opt,name=front_hooks,json=frontHooks,proto3" json:"front_hooks,omitempty"`
	BackHooks            string   `protobuf:"bytes,5,opt,name=back_hooks,json=backHooks,proto3" json:"back_hooks,omitempty"`
	LexiconSymbols       string   `protobuf:"bytes,6,opt,name=lexicon_symbols,json=lexiconSymbols,proto3" json:"lexicon_symbols,omitempty"`
	InnerFrontHook       bool     `protobuf:"varint,7,opt,name=inner_front_hook,json=innerFrontHook,proto3" json:"inner_front_hook,omitempty"`
	InnerBackHook        bool     `protobuf:"varint,8,opt,name=inner_back_hook,json=innerBackHook,proto3" json:"inner_back_hook,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Word) Reset()         { *m = Word{} }
func (m *Word) String() string { return proto.CompactTextString(m) }
func (*Word) ProtoMessage()    {}
func (*Word) Descriptor() ([]byte, []int) {
	return fileDescriptor_14226a2334c91a98, []int{1}
}

func (m *Word) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Word.Unmarshal(m, b)
}
func (m *Word) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Word.Marshal(b, m, deterministic)
}
func (m *Word) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Word.Merge(m, src)
}
func (m *Word) XXX_Size() int {
	return xxx_messageInfo_Word.Size(m)
}
func (m *Word) XXX_DiscardUnknown() {
	xxx_messageInfo_Word.DiscardUnknown(m)
}

var xxx_messageInfo_Word proto.InternalMessageInfo

func (m *Word) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

func (m *Word) GetAlphagram() string {
	if m != nil {
		return m.Alphagram
	}
	return ""
}

func (m *Word) GetDefinition() string {
	if m != nil {
		return m.Definition
	}
	return ""
}

func (m *Word) GetFrontHooks() string {
	if m != nil {
		return m.FrontHooks
	}
	return ""
}

func (m *Word) GetBackHooks() string {
	if m != nil {
		return m.BackHooks
	}
	return ""
}

func (m *Word) GetLexiconSymbols() string {
	if m != nil {
		return m.LexiconSymbols
	}
	return ""
}

func (m *Word) GetInnerFrontHook() bool {
	if m != nil {
		return m.InnerFrontHook
	}
	return false
}

func (m *Word) GetInnerBackHook() bool {
	if m != nil {
		return m.InnerBackHook
	}
	return false
}

// A SearchRequest encapsulates a number of varied conditions and lets one
// search for questions.
type SearchRequest struct {
	Searchparams         []*SearchRequest_SearchParam `protobuf:"bytes,1,rep,name=searchparams,proto3" json:"searchparams,omitempty"`
	Expand               bool                         `protobuf:"varint,2,opt,name=expand,proto3" json:"expand,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_14226a2334c91a98, []int{2}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetSearchparams() []*SearchRequest_SearchParam {
	if m != nil {
		return m.Searchparams
	}
	return nil
}

func (m *SearchRequest) GetExpand() bool {
	if m != nil {
		return m.Expand
	}
	return false
}

type SearchRequest_MinMax struct {
	// Used for length, prob range, prob limit, num anagrams,
	// num_vowels, point value
	Min                  int32    `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max                  int32    `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest_MinMax) Reset()         { *m = SearchRequest_MinMax{} }
func (m *SearchRequest_MinMax) String() string { return proto.CompactTextString(m) }
func (*SearchRequest_MinMax) ProtoMessage()    {}
func (*SearchRequest_MinMax) Descriptor() ([]byte, []int) {
	return fileDescriptor_14226a2334c91a98, []int{2, 0}
}

func (m *SearchRequest_MinMax) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest_MinMax.Unmarshal(m, b)
}
func (m *SearchRequest_MinMax) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest_MinMax.Marshal(b, m, deterministic)
}
func (m *SearchRequest_MinMax) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest_MinMax.Merge(m, src)
}
func (m *SearchRequest_MinMax) XXX_Size() int {
	return xxx_messageInfo_SearchRequest_MinMax.Size(m)
}
func (m *SearchRequest_MinMax) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest_MinMax.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest_MinMax proto.InternalMessageInfo

func (m *SearchRequest_MinMax) GetMin() int32 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *SearchRequest_MinMax) GetMax() int32 {
	if m != nil {
		return m.Max
	}
	return 0
}

type SearchRequest_StringValue struct {
	// Used for lexicon, matching anagram, not_in_lexicon
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest_StringValue) Reset()         { *m = SearchRequest_StringValue{} }
func (m *SearchRequest_StringValue) String() string { return proto.CompactTextString(m) }
func (*SearchRequest_StringValue) ProtoMessage()    {}
func (*SearchRequest_StringValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_14226a2334c91a98, []int{2, 1}
}

func (m *SearchRequest_StringValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest_StringValue.Unmarshal(m, b)
}
func (m *SearchRequest_StringValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest_StringValue.Marshal(b, m, deterministic)
}
func (m *SearchRequest_StringValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest_StringValue.Merge(m, src)
}
func (m *SearchRequest_StringValue) XXX_Size() int {
	return xxx_messageInfo_SearchRequest_StringValue.Size(m)
}
func (m *SearchRequest_StringValue) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest_StringValue.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest_StringValue proto.InternalMessageInfo

func (m *SearchRequest_StringValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type SearchRequest_StringArray struct {
	// Used for alphagram_list
	Values               []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest_StringArray) Reset()         { *m = SearchRequest_StringArray{} }
func (m *SearchRequest_StringArray) String() string { return proto.CompactTextString(m) }
func (*SearchRequest_StringArray) ProtoMessage()    {}
func (*SearchRequest_StringArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_14226a2334c91a98, []int{2, 2}
}

func (m *SearchRequest_StringArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest_StringArray.Unmarshal(m, b)
}
func (m *SearchRequest_StringArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest_StringArray.Marshal(b, m, deterministic)
}
func (m *SearchRequest_StringArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest_StringArray.Merge(m, src)
}
func (m *SearchRequest_StringArray) XXX_Size() int {
	return xxx_messageInfo_SearchRequest_StringArray.Size(m)
}
func (m *SearchRequest_StringArray) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest_StringArray.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest_StringArray proto.InternalMessageInfo

func (m *SearchRequest_StringArray) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type SearchRequest_NumberArray struct {
	// Used for prob list
	Values               []int32  `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest_NumberArray) Reset()         { *m = SearchRequest_NumberArray{} }
func (m *SearchRequest_NumberArray) String() string { return proto.CompactTextString(m) }
func (*SearchRequest_NumberArray) ProtoMessage()    {}
func (*SearchRequest_NumberArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_14226a2334c91a98, []int{2, 3}
}

func (m *SearchRequest_NumberArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest_NumberArray.Unmarshal(m, b)
}
func (m *SearchRequest_NumberArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest_NumberArray.Marshal(b, m, deterministic)
}
func (m *SearchRequest_NumberArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest_NumberArray.Merge(m, src)
}
func (m *SearchRequest_NumberArray) XXX_Size() int {
	return xxx_messageInfo_SearchRequest_NumberArray.Size(m)
}
func (m *SearchRequest_NumberArray) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest_NumberArray.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest_NumberArray proto.InternalMessageInfo

func (m *SearchRequest_NumberArray) GetValues() []int32 {
	if m != nil {
		return m.Values
	}
	return nil
}

type SearchRequest_SearchParam struct {
	Condition SearchRequest_Condition `protobuf:"varint,1,opt,name=condition,proto3,enum=wordsearcher.SearchRequest_Condition" json:"condition,omitempty"`
	// Types that are valid to be assigned to Conditionparam:
	//	*SearchRequest_SearchParam_Minmax
	//	*SearchRequest_SearchParam_Stringvalue
	//	*SearchRequest_SearchParam_Stringarray
	//	*SearchRequest_SearchParam_Numberarray
	Conditionparam       isSearchRequest_SearchParam_Conditionparam `protobuf_oneof:"conditionparam"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *SearchRequest_SearchParam) Reset()         { *m = SearchRequest_SearchParam{} }
func (m *SearchRequest_SearchParam) String() string { return proto.CompactTextString(m) }
func (*SearchRequest_SearchParam) ProtoMessage()    {}
func (*SearchRequest_SearchParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_14226a2334c91a98, []int{2, 4}
}

func (m *SearchRequest_SearchParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest_SearchParam.Unmarshal(m, b)
}
func (m *SearchRequest_SearchParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest_SearchParam.Marshal(b, m, deterministic)
}
func (m *SearchRequest_SearchParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest_SearchParam.Merge(m, src)
}
func (m *SearchRequest_SearchParam) XXX_Size() int {
	return xxx_messageInfo_SearchRequest_SearchParam.Size(m)
}
func (m *SearchRequest_SearchParam) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest_SearchParam.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest_SearchParam proto.InternalMessageInfo

func (m *SearchRequest_SearchParam) GetCondition() SearchRequest_Condition {
	if m != nil {
		return m.Condition
	}
	return SearchRequest_LEXICON
}

type isSearchRequest_SearchParam_Conditionparam interface {
	isSearchRequest_SearchParam_Conditionparam()
}

type SearchRequest_SearchParam_Minmax struct {
	Minmax *SearchRequest_MinMax `protobuf:"bytes,2,opt,name=minmax,proto3,oneof"`
}

type SearchRequest_SearchParam_Stringvalue struct {
	Stringvalue *SearchRequest_StringValue `protobuf:"bytes,3,opt,name=stringvalue,proto3,oneof"`
}

type SearchRequest_SearchParam_Stringarray struct {
	Stringarray *SearchRequest_StringArray `protobuf:"bytes,4,opt,name=stringarray,proto3,oneof"`
}

type SearchRequest_SearchParam_Numberarray struct {
	Numberarray *SearchRequest_NumberArray `protobuf:"bytes,5,opt,name=numberarray,proto3,oneof"`
}

func (*SearchRequest_SearchParam_Minmax) isSearchRequest_SearchParam_Conditionparam() {}

func (*SearchRequest_SearchParam_Stringvalue) isSearchRequest_SearchParam_Conditionparam() {}

func (*SearchRequest_SearchParam_Stringarray) isSearchRequest_SearchParam_Conditionparam() {}

func (*SearchRequest_SearchParam_Numberarray) isSearchRequest_SearchParam_Conditionparam() {}

func (m *SearchRequest_SearchParam) GetConditionparam() isSearchRequest_SearchParam_Conditionparam {
	if m != nil {
		return m.Conditionparam
	}
	return nil
}

func (m *SearchRequest_SearchParam) GetMinmax() *SearchRequest_MinMax {
	if x, ok := m.GetConditionparam().(*SearchRequest_SearchParam_Minmax); ok {
		return x.Minmax
	}
	return nil
}

func (m *SearchRequest_SearchParam) GetStringvalue() *SearchRequest_StringValue {
	if x, ok := m.GetConditionparam().(*SearchRequest_SearchParam_Stringvalue); ok {
		return x.Stringvalue
	}
	return nil
}

func (m *SearchRequest_SearchParam) GetStringarray() *SearchRequest_StringArray {
	if x, ok := m.GetConditionparam().(*SearchRequest_SearchParam_Stringarray); ok {
		return x.Stringarray
	}
	return nil
}

func (m *SearchRequest_SearchParam) GetNumberarray() *SearchRequest_NumberArray {
	if x, ok := m.GetConditionparam().(*SearchRequest_SearchParam_Numberarray); ok {
		return x.Numberarray
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SearchRequest_SearchParam) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SearchRequest_SearchParam_Minmax)(nil),
		(*SearchRequest_SearchParam_Stringvalue)(nil),
		(*SearchRequest_SearchParam_Stringarray)(nil),
		(*SearchRequest_SearchParam_Numberarray)(nil),
	}
}

type SearchResponse struct {
	Alphagrams           []*Alphagram `protobuf:"bytes,1,rep,name=alphagrams,proto3" json:"alphagrams,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_14226a2334c91a98, []int{3}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetAlphagrams() []*Alphagram {
	if m != nil {
		return m.Alphagrams
	}
	return nil
}

func init() {
	proto.RegisterEnum("wordsearcher.SearchRequest_Condition", SearchRequest_Condition_name, SearchRequest_Condition_value)
	proto.RegisterType((*Alphagram)(nil), "wordsearcher.Alphagram")
	proto.RegisterType((*Word)(nil), "wordsearcher.Word")
	proto.RegisterType((*SearchRequest)(nil), "wordsearcher.SearchRequest")
	proto.RegisterType((*SearchRequest_MinMax)(nil), "wordsearcher.SearchRequest.MinMax")
	proto.RegisterType((*SearchRequest_StringValue)(nil), "wordsearcher.SearchRequest.StringValue")
	proto.RegisterType((*SearchRequest_StringArray)(nil), "wordsearcher.SearchRequest.StringArray")
	proto.RegisterType((*SearchRequest_NumberArray)(nil), "wordsearcher.SearchRequest.NumberArray")
	proto.RegisterType((*SearchRequest_SearchParam)(nil), "wordsearcher.SearchRequest.SearchParam")
	proto.RegisterType((*SearchResponse)(nil), "wordsearcher.SearchResponse")
}

func init() { proto.RegisterFile("rpc/wordsearcher/searcher.proto", fileDescriptor_14226a2334c91a98) }

var fileDescriptor_14226a2334c91a98 = []byte{
	// 789 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xc1, 0x92, 0xda, 0x46,
	0x10, 0x5d, 0x2d, 0x2b, 0xed, 0xaa, 0xb5, 0x66, 0x95, 0x2e, 0xc7, 0x51, 0x11, 0x27, 0xa6, 0x48,
	0x39, 0xe6, 0x90, 0x5a, 0x57, 0x91, 0x43, 0x2e, 0xb9, 0x08, 0x22, 0x83, 0xca, 0x42, 0x90, 0x01,
	0xaf, 0x9d, 0x93, 0x6a, 0x00, 0x79, 0x51, 0x19, 0x46, 0xca, 0x88, 0x4d, 0xd8, 0x4f, 0xc8, 0x39,
	0xb9, 0xe6, 0xb3, 0xf2, 0x1f, 0xf9, 0x84, 0xd4, 0xcc, 0x48, 0x20, 0x5c, 0x5b, 0xc4, 0xb7, 0xe9,
	0x37, 0xaf, 0x5f, 0x77, 0xbf, 0x1e, 0x04, 0x3c, 0xe3, 0xd9, 0xfc, 0xe5, 0xef, 0x29, 0x5f, 0xe4,
	0x31, 0xe5, 0xf3, 0x65, 0xcc, 0x5f, 0x96, 0x87, 0xeb, 0x8c, 0xa7, 0x9b, 0x14, 0x2f, 0xab, 0x97,
	0xad, 0x7f, 0x34, 0x30, 0xdd, 0x55, 0xb6, 0xa4, 0xb7, 0x9c, 0xae, 0xf1, 0x29, 0x98, 0xb4, 0x0c,
	0x1c, 0xad, 0xa9, 0xb5, 0x4d, 0xb2, 0x07, 0xb0, 0x0d, 0xba, 0xcc, 0x75, 0x4e, 0x9b, 0xb5, 0xb6,
	0xd5, 0xc1, 0xeb, 0xaa, 0xd2, 0xf5, 0xdb, 0x94, 0x2f, 0x88, 0x22, 0x60, 0x0b, 0x2e, 0xe3, 0x6d,
	0x46, 0xd9, 0x22, 0x5e, 0x90, 0x38, 0xe3, 0x4e, 0xad, 0xa9, 0xb5, 0x2f, 0xc8, 0x01, 0x86, 0x4f,
	0xc0, 0x58, 0xc5, 0xec, 0x76, 0xb3, 0x74, 0xce, 0x9a, 0x5a, 0x5b, 0x27, 0x45, 0x84, 0x4d, 0xb0,
	0x32, 0x9e, 0xce, 0xe8, 0x2c, 0x59, 0x25, 0x9b, 0x7b, 0x47, 0x97, 0x97, 0x55, 0x48, 0xa8, 0xcf,
	0xd3, 0xf5, 0x2c, 0x61, 0x74, 0x93, 0xa4, 0x2c, 0x77, 0x8c, 0xa6, 0xd6, 0xae, 0x91, 0x03, 0xac,
	0xf5, 0xe7, 0x29, 0x9c, 0x89, 0x8e, 0x10, 0xe1, 0x4c, 0xf4, 0x54, 0x4c, 0x23, 0xcf, 0x87, 0x63,
	0x9e, 0x7e, 0x3c, 0xe6, 0xd7, 0x00, 0x8b, 0xf8, 0x7d, 0xc2, 0x12, 0xa1, 0x24, 0x5b, 0x37, 0x49,
	0x05, 0xc1, 0x67, 0x60, 0xbd, 0xe7, 0x29, 0xdb, 0x44, 0xcb, 0x34, 0xfd, 0x90, 0xcb, 0xee, 0x4d,
	0x02, 0x12, 0x1a, 0x08, 0x04, 0xbf, 0x02, 0x98, 0xd1, 0xf9, 0x87, 0xe2, 0x5e, 0x57, 0xfa, 0x02,
	0x51, 0xd7, 0x2f, 0xe0, 0x6a, 0x15, 0x6f, 0x93, 0x79, 0xca, 0xa2, 0xfc, 0x7e, 0x3d, 0x4b, 0x57,
	0x6a, 0x02, 0x93, 0xd4, 0x0b, 0x78, 0xa2, 0x50, 0x6c, 0x83, 0x9d, 0x30, 0x16, 0xf3, 0x68, 0x5f,
	0xce, 0x39, 0x97, 0x4e, 0xd6, 0x25, 0xfe, 0xaa, 0x2c, 0x89, 0xdf, 0xc2, 0x95, 0x62, 0xee, 0xea,
	0x3a, 0x17, 0x92, 0xf8, 0x48, 0xc2, 0xdd, 0xa2, 0x76, 0xeb, 0xaf, 0x73, 0x78, 0x34, 0x91, 0x0b,
	0x23, 0xf1, 0xaf, 0x77, 0x71, 0xbe, 0xc1, 0xd7, 0x70, 0xa9, 0x36, 0x98, 0x51, 0x4e, 0xd7, 0xb9,
	0xa3, 0xc9, 0xd5, 0xbe, 0x38, 0x5c, 0xed, 0x41, 0x4a, 0x11, 0x8d, 0x05, 0x9f, 0x1c, 0x24, 0x8b,
	0x95, 0xaa, 0x15, 0x4b, 0x53, 0x2f, 0x48, 0x11, 0x35, 0xbe, 0x03, 0x63, 0x98, 0xb0, 0x21, 0xdd,
	0xa2, 0x0d, 0xb5, 0x75, 0xc2, 0xe4, 0x32, 0x74, 0x22, 0x8e, 0x12, 0xa1, 0x5b, 0x99, 0x20, 0x10,
	0xba, 0x6d, 0x7c, 0x03, 0xd6, 0x64, 0xc3, 0x13, 0x76, 0x7b, 0x43, 0x57, 0x77, 0x31, 0x3e, 0x06,
	0xfd, 0x37, 0x71, 0x28, 0x36, 0xa8, 0x82, 0xc6, 0xf3, 0x92, 0xe4, 0x72, 0x4e, 0xef, 0x45, 0x65,
	0x89, 0xab, 0x01, 0x4c, 0x52, 0x44, 0x82, 0x16, 0xde, 0xad, 0x67, 0x31, 0x7f, 0x88, 0xa6, 0xef,
	0x68, 0x7f, 0xd4, 0xc0, 0xaa, 0x8c, 0x85, 0x3d, 0x30, 0xe7, 0x29, 0x5b, 0xa8, 0x17, 0x20, 0xea,
	0xd6, 0x3b, 0xcf, 0x8f, 0x59, 0xd2, 0x2b, 0xc9, 0x64, 0x9f, 0x87, 0x3f, 0x82, 0xb1, 0x4e, 0x58,
	0x39, 0x9c, 0xd5, 0x69, 0x1d, 0x53, 0x50, 0xfe, 0x0c, 0x4e, 0x48, 0x91, 0x83, 0xaf, 0xc1, 0xca,
	0xe5, 0x80, 0x6a, 0xf8, 0x9a, 0x94, 0x38, 0xbe, 0x97, 0xbd, 0x69, 0x83, 0x13, 0x52, 0xcd, 0xde,
	0x8b, 0x51, 0x61, 0x83, 0x7c, 0xb2, 0x9f, 0x24, 0x26, 0x5d, 0xdb, 0x8b, 0xc9, 0x6c, 0x21, 0xc6,
	0xa4, 0xa7, 0x4a, 0x4c, 0xff, 0x7f, 0xb1, 0xca, 0x0a, 0x84, 0x58, 0x25, 0xbb, 0x6b, 0x43, 0x7d,
	0xe7, 0x98, 0x7c, 0x45, 0xad, 0x7f, 0x35, 0x30, 0x77, 0x7e, 0xa2, 0x05, 0xe7, 0x81, 0xf7, 0xce,
	0xef, 0x8d, 0x42, 0xfb, 0x04, 0x01, 0x8c, 0xc0, 0x0b, 0xfb, 0xd3, 0x81, 0xad, 0xe1, 0xe7, 0xf0,
	0xd9, 0x98, 0x8c, 0xba, 0x6e, 0xd7, 0x0f, 0xfc, 0xe9, 0x2f, 0x11, 0x71, 0xc3, 0xbe, 0x67, 0x9f,
	0xe2, 0x63, 0xb0, 0xab, 0x70, 0xe0, 0x4f, 0xa6, 0x76, 0xed, 0x63, 0x72, 0xe0, 0x0f, 0xfd, 0xa9,
	0x7d, 0x86, 0x4f, 0x00, 0xc3, 0x37, 0xc3, 0xae, 0x47, 0xa2, 0xd1, 0xab, 0xc8, 0x0d, 0xdd, 0x3e,
	0x71, 0x87, 0x13, 0x5b, 0x17, 0x22, 0x7b, 0xfc, 0x66, 0xf4, 0xd6, 0x0b, 0x26, 0xb6, 0x81, 0x57,
	0x60, 0x8d, 0x47, 0x7e, 0x38, 0x8d, 0x6e, 0xdc, 0xe0, 0x8d, 0x67, 0x5f, 0x08, 0xda, 0xd0, 0x9d,
	0xf6, 0x06, 0x7e, 0xd8, 0x2f, 0xb3, 0x6d, 0x13, 0x11, 0xea, 0x6e, 0x30, 0x1e, 0xc8, 0x50, 0xd5,
	0x07, 0x81, 0x85, 0xa3, 0x69, 0xe4, 0x87, 0x51, 0x39, 0x8c, 0x85, 0x26, 0xe8, 0xc4, 0xeb, 0x7b,
	0xef, 0xec, 0xcb, 0x96, 0x0f, 0xf5, 0xd2, 0xb0, 0x3c, 0x4b, 0x59, 0x1e, 0xe3, 0x0f, 0x00, 0xbb,
	0x0f, 0x52, 0xf9, 0xa3, 0xfc, 0xe2, 0xd0, 0xe2, 0xdd, 0x57, 0x9b, 0x54, 0xa8, 0x9d, 0xbf, 0x35,
	0xb0, 0x7f, 0x16, 0xa6, 0x27, 0x29, 0x9b, 0x14, 0x54, 0xec, 0x81, 0xa1, 0xce, 0xf8, 0xe5, 0x91,
	0x35, 0x35, 0x9e, 0x3e, 0x7c, 0x59, 0xb4, 0xf4, 0x13, 0x18, 0x9e, 0xfc, 0x39, 0xe3, 0x51, 0xde,
	0x71, 0x95, 0x99, 0x21, 0xff, 0x84, 0xbe, 0xff, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x3e, 0xd2, 0x3e,
	0x4c, 0xa7, 0x06, 0x00, 0x00,
}
